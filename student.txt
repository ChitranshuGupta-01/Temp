"use client";

import React, { useState } from "react";
import { useRouter, useParams } from "next/navigation";
import { ArrowLeft, FileText, User, Calendar, AlertTriangle } from "lucide-react";
import ERDiagram from "./ERDiagram";
import DataTableO from "./DataTable_orig";
import RelatedTransactionsO from "./RelatedTransactions_orig";

const CasePage: React.FC = () => {
  const router = useRouter();
  const params = useParams<{ caseNumber: string }>();
  const [isFullscreen, setIsFullscreen] = useState(false);

  const caseNumber = params?.caseNumber || "223456";

  const toggleFullscreen = () => {
    setIsFullscreen(!isFullscreen);
  };

  // Mock case data
  const caseData = {
    caseNumber,
    title: "High Value Transaction Investigation",
    status: "Active",
    priority: "High",
    assignee: "John Smith",
    createdDate: "2024-01-10",
    lastUpdated: "2024-01-15",
    description:
      "Investigation of suspicious wire transfers exceeding $15,000 from account ****5678 to multiple beneficiaries. Pattern suggests potential money laundering activity.",
    profileName: "John Doe",
    profileId: "PROF-789",
    riskScore: 85,
  };

  const getStatusColor = (status: string) => {
    switch (status.toLowerCase()) {
      case "active":
        return "bg-gradient-to-r from-green-100 to-emerald-100 text-green-800";
      case "under review":
        return "bg-gradient-to-r from-yellow-100 to-orange-100 text-orange-800";
      case "closed":
        return "bg-gradient-to-r from-gray-100 to-slate-100 text-gray-800";
      default:
        return "bg-gradient-to-r from-blue-100 to-indigo-100 text-blue-800";
    }
  };

  const getPriorityColor = (priority: string) => {
    switch (priority.toLowerCase()) {
      case "high":
        return "bg-gradient-to-r from-red-100 to-pink-100 text-red-800";
      case "medium":
        return "bg-gradient-to-r from-yellow-100 to-orange-100 text-orange-800";
      case "low":
        return "bg-gradient-to-r from-green-100 to-emerald-100 text-green-800";
      default:
        return "bg-gradient-to-r from-gray-100 to-slate-100 text-gray-800";
    }
  };

  const getRiskScoreColor = (score: number) => {
    if (score >= 80) return "text-red-600 bg-red-50";
    if (score >= 60) return "text-orange-600 bg-orange-50";
    if (score >= 40) return "text-yellow-600 bg-yellow-50";
    return "text-green-600 bg-green-50";
  };

  return (
    <div className="min-h-screen">
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <button
                onClick={() => router.push("/analysis/caseId/1123e")}
                className="p-2 text-gray-600 hover:text-orange-600 hover:bg-orange-50 rounded-lg transition-all duration-200"
              >
                <ArrowLeft className="w-6 h-6" />
              </button>

              <div className="flex items-center space-x-4">
                <div className="p-3 bg-gradient-to-r from-orange-200 to-orange-300 rounded-xl shadow-lg">
                  <FileText className="w-8 h-8 text-white" />
                </div>
                <div>
                  <h1 className="text-2xl font-bold text-gray-900">
                    Case #{caseData.caseNumber}
                  </h1>
                  <p className="text-gray-600">{caseData.title}</p>
                </div>
              </div>
            </div>

            <div className="flex items-center space-x-4">
              <div className="flex space-x-2">
                <span
                  className={`inline-flex items-center px-4 py-2 rounded-full text-sm font-medium shadow-sm ${getStatusColor(
                    caseData.status
                  )}`}
                >
                  {caseData.status}
                </span>
                <span
                  className={`inline-flex items-center px-4 py-2 rounded-full text-sm font-medium shadow-sm ${getPriorityColor(
                    caseData.priority
                  )}`}
                >
                  {caseData.priority} Priority
                </span>
              </div>
            </div>
          </div>
        </div>
      </header>

      {/* Case Summary */}
      <div className="bg-gradient-to-r from-slate-50 to-blue-50 border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
            {/* Case Details */}
            <div className="lg:col-span-2">
              <h3 className="text-lg font-semibold text-gray-900 mb-3">
                Case Details
              </h3>
              <p className="text-gray-700 mb-4">{caseData.description}</p>

              <div className="grid grid-cols-2 gap-4 text-sm">
                <div className="flex items-center space-x-2">
                  <User className="w-4 h-4 text-gray-500" />
                  <span className="text-gray-600">
                    Assignee:{" "}
                    <span className="font-medium text-gray-900">
                      {caseData.assignee}
                    </span>
                  </span>
                </div>
                <div className="flex items-center space-x-2">
                  <Calendar className="w-4 h-4 text-gray-500" />
                  <span className="text-gray-600">
                    Created:{" "}
                    <span className="font-medium text-gray-900">
                      {caseData.createdDate}
                    </span>
                  </span>
                </div>
                <div className="flex items-center space-x-2">
                  <FileText className="w-4 h-4 text-gray-500" />
                  <span className="text-gray-600">
                    Profile:{" "}
                    <span className="font-medium text-gray-900">
                      {caseData.profileName} ({caseData.profileId})
                    </span>
                  </span>
                </div>
                <div className="flex items-center space-x-2">
                  <Calendar className="w-4 h-4 text-gray-500" />
                  <span className="text-gray-600">
                    Updated:{" "}
                    <span className="font-medium text-gray-900">
                      {caseData.lastUpdated}
                    </span>
                  </span>
                </div>
              </div>
            </div>

            {/* Risk Score */}
            <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-6">
              <div className="flex items-center space-x-3">
                <AlertTriangle className="w-6 h-6 text-orange-600" />
                <div>
                  <p className="text-sm text-gray-600">Risk Score</p>
                  <div className="flex items-center space-x-2">
                    <span
                      className={`text-2xl font-bold px-3 py-1 rounded-lg ${getRiskScoreColor(
                        caseData.riskScore
                      )}`}
                    >
                      {caseData.riskScore}
                    </span>
                    <span className="text-sm text-gray-500">/100</span>
                  </div>
                </div>
              </div>
            </div>

            {/* Quick Actions */}
            <div className="bg-white rounded-xl shadow-lg border border-gray-200 p-6">
              <h4 className="text-sm font-semibold text-gray-900 mb-3">
                Quick Actions
              </h4>
              <div className="space-y-2">
                <button className="w-full text-left px-3 py-2 text-sm text-purple-600 hover:bg-purple-50 rounded-lg transition-colors duration-200">
                  Add Note
                </button>
                <button className="w-full text-left px-3 py-2 text-sm text-purple-600 hover:bg-purple-50 rounded-lg transition-colors duration-200">
                  Update Status
                </button>
                <button className="w-full text-left px-3 py-2 text-sm text-purple-600 hover:bg-purple-50 rounded-lg transition-colors duration-200">
                  Generate Report
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="space-y-8">
          {/* ER Diagram Section */}
          <div
            className={`transition-all duration-300 ${
              isFullscreen ? "" : "h-[600px]"
            }`}
          >
            <ERDiagram
              isFullscreen={isFullscreen}
              onToggleFullscreen={toggleFullscreen}
            />
          </div>

          {/* Data Tables Section - Hidden in fullscreen mode */}
          {!isFullscreen && (
            <div className="animate-fadeIn space-y-8">
              <DataTableO />
              <RelatedTransactionsO />
            </div>
          )}
        </div>
      </main>
    </div>
  );
};

export default CasePage;

