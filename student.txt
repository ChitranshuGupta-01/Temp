import React from "react";
import Header from "../components/Header";
import Profile from "../components/Profile";
import Accounts from "../components/Accounts";
import CASASummary from "../components/CASASummary";
import Events from "../components/Events";

import {
  fetchCASAContact, fetchCustomerCASA,
  fetchCASACorperateProfile, fetchCASACustomers, fetchCASADeposists, fetchCASATransactions
} from "../services/ebbs";

import {fetchICMProfile, fetchICMCrossProducts} from "../services/icm";

import DatabricksClient from "../services/databricks";

const AnalysisPage = async ({
  searchParams
}: {
  searchParams: { [key: string]: string | undefined };
}) => {

  const type = searchParams?.type || "";
  let value = searchParams?.value || "";
  let relId = "";
  var [contacts, customer, coperateProfile, deposists,casaCustomer, transactions, tmxLogs,
    profileICM, productsICM]: any = [{}, {}, {},{},[],[],[], [], []];
  if (type == "accountNumber") {
     [casaCustomer, transactions] = await Promise.all([fetchCASACustomers(value),
      fetchCASATransactions(value)
    ]);
    try {
      console.log(casaCustomer["data"][0]["attributes"]["casa-customers"][0]["profile-id"]);
      relId = casaCustomer["data"] ?
        casaCustomer["data"][0]["attributes"]["casa-customers"][0]["profile-id"] : "";
    } catch (error) {
      console.error("Error extracting profile-id from data:", error);
      relId = ""; // Fallback value in case of error
    }
  }
  if (type == "relationshipId") {
      relId = value;
  }

  // console.log("@@@");
  // console.log(relId)
  // console.log(value)



  if (relId) {
    // Fetch data concurrently
    const DBRClient:any = new DatabricksClient();
    [contacts, customer, coperateProfile, deposists, profileICM, productsICM, tmxLogs] = await Promise.all([
      fetchCASAContact(relId),
      fetchCustomerCASA(relId),
      fetchCASACorperateProfile(relId),
      fetchCASADeposists(relId),
      fetchICMProfile(relId),
      fetchICMCrossProducts(relId),
      //DBRClient.runQuery(),
      []
    ]);

  } else {
    console.log("No value provided in searchParams.");
  }

  return (
    <div>
      <Header value={value} type={type} />
      <div className="max-w-7xl mx-auto px-4 py-6">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
          <div className="bg-white/10 backdrop-blur-xl rounded-xl border overflow-hidden">
            <Profile contacts={contacts}
              customer={customer}
              coperateProfile={coperateProfile}
              deposists={deposists} />
          </div>
          <div className="bg-white/10 backdrop-blur-xl rounded-xl border overflow-hidden">
            <Accounts contacts={contacts}
              customer={customer}
              coperateProfile={coperateProfile}
              deposists={deposists}/>
          </div>
        </div>
        <div className="bg-white/10 backdrop-blur-xl rounded-xl shadow-lg border border-gray-200  overflow-hidden mb-6">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-0">
              <CASASummary>
              </CASASummary>
            </div>
        </div>
        <Events transactions={transactions} tmxLogs={tmxLogs}></Events>
      </div>
    </div>
  );
};

export default AnalysisPage;
