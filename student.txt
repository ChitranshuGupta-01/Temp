// Import necessary classes for REST Controller, HTTP status, and path variable
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

// Mark this class as a REST controller
@RestController
public class MultipleOfFiveController {

    // Define a GET endpoint with path variable 'number'
    @GetMapping("/api/check/{number}")
    public ResponseEntity<String> checkMultipleOfFive(@PathVariable int number) {
        // Check if the number is a multiple of 5
        boolean isMultiple = number % 5 == 0;

        // Set message to "yes" if multiple, "no" if not
        String message = isMultiple ? "yes" : "no";

        // Return HTTP status 200 (OK) if multiple, 400 (Bad Request) otherwise, and the message
        return ResponseEntity
                .status(isMultiple ? HttpStatus.OK : HttpStatus.BAD_REQUEST)
                .body(message);
    }
}


///////////////////////////////////

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

// Main Spring Boot application annotation
@SpringBootApplication
public class MultipleOfFiveApplication {

    // Main method to start the Spring Boot application
    public static void main(String[] args) {
        SpringApplication.run(MultipleOfFiveApplication.class, args);
    }
}



////////////////////////////////////////////

// Import Axios library to make HTTP requests
import axios from 'axios';

// Define an async function to hit the Spring Boot API with given number
export const checkMultipleOfFive = async (number) => {
    // Make GET request to backend, passing number in URL path
    return axios.get(`http://localhost:8080/api/check/${number}`);
};

//////////////////////////////////////////

// Import React and useState hook for state management
import React, { useState } from "react";
// Import the Axios function from service.js
import { checkMultipleOfFive } from "./service";

// Main functional component
const CheckNumber = () => {
    // State to hold the input number from user
    const [number, setNumber] = useState('');
    // State to hold API response ("yes", "no", or error)
    const [result, setResult] = useState('');

    // Function to handle "Check" button click
    const handleCheck = async () => {
        // If no number is entered, stop function
        if (!number) return;
        try {
            // Call the backend API and wait for response
            const response = await checkMultipleOfFive(number);
            // Set result state to response data ("yes" or "no")
            setResult(response.data);  
        } catch (error) {
            // If error, show server message if available, else generic error
            setResult(error.response?.data || "Error occured");
        }
    };

    // JSX: Renders input box, button, and result div
    return (
        <div>
            {/* Input box for user to enter a number */}
            <input
                type="number"
                value={number}
                onChange={e => setNumber(e.target.value)}
                placeholder="Enter number"
            />
            {/* Button to check if number is multiple of 5 */}
            <button onClick={handleCheck}>Check</button>
            {/* Display result from backend */}
            <div>Result: {result}</div>
        </div>
    );
};

// Export component for use elsewhere
export default CheckNumber;

