import React, { useState, useEffect } from "react";
import documentService from "./serviceDocuments"; // API service
import "./DocumentManager.css";

function DocumentManager() {
  const [documents, setDocuments] = useState([]);
  const [editingIdx, setEditingIdx] = useState(-1);
  const [editData, setEditData] = useState({});
  const [creating, setCreating] = useState(false);
  const [newData, setNewData] = useState({
    applicationId: "",
    documentName: "",
    documentType: "",
    file: null,
  });

  // ✅ Fetch all documents
  useEffect(() => {
    documentService.getAllDocuments().then((res) => {
      setDocuments(res.data);
    });
  }, []);

  // ✅ Handle file select
  const handleFileChange = (e) => {
    setNewData({ ...newData, file: e.target.files[0] });
  };

  // ✅ Create new document
  const handleCreate = () => {
    const formData = new FormData();
    formData.append(
      "document",
      new Blob(
        [
          JSON.stringify({
            applicationId: newData.applicationId,
            documentName: newData.documentName,
            documentType: newData.documentType,
          }),
        ],
        { type: "application/json" }
      )
    );
    formData.append("file", newData.file);

    documentService.createDocument(formData).then((res) => {
      setDocuments([...documents, res.data]);
      setCreating(false);
      setNewData({
        applicationId: "",
        documentName: "",
        documentType: "",
        file: null,
      });
    });
  };

  return (
    <div className="document-manager">
      <h2>Document Manager</h2>

      {/* ✅ List all documents */}
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>Application ID</th>
            <th>Document Name</th>
            <th>Type</th>
            <th>Preview</th>
          </tr>
        </thead>
        <tbody>
          {documents.map((doc) => (
            <tr key={doc.id}>
              <td>{doc.id}</td>
              <td>{doc.applicationId}</td>
              <td>{doc.documentName}</td>
              <td>{doc.documentType}</td>
              <td>
                {/* ✅ FIXED: show backend-served image */}
                <img
                  src={doc.fileUrl}
                  alt={doc.documentName}
                  width="120"
                  style={{ border: "1px solid #ccc", borderRadius: "8px" }}
                />
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* ✅ Create new document */}
      {creating ? (
        <div className="create-form">
          <h3>Create Document</h3>
          <input
            type="text"
            placeholder="Application ID"
            value={newData.applicationId}
            onChange={(e) =>
              setNewData({ ...newData, applicationId: e.target.value })
            }
          />
          <input
            type="text"
            placeholder="Document Name"
            value={newData.documentName}
            onChange={(e) =>
              setNewData({ ...newData, documentName: e.target.value })
            }
          />
          <input
            type="text"
            placeholder="Document Type"
            value={newData.documentType}
            onChange={(e) =>
              setNewData({ ...newData, documentType: e.target.value })
            }
          />
          <input type="file" onChange={handleFileChange} />
          <button onClick={handleCreate}>Save</button>
          <button onClick={() => setCreating(false)}>Cancel</button>
        </div>
      ) : (
        <button onClick={() => setCreating(true)}>+ Add Document</button>
      )}
    </div>
  );
}

export default DocumentManager;
