import { render, screen, fireEvent } from "@testing-library/react";
import RelatedTransactions from "@/components/RelatedTransactions";

const mockTxns = [
  {
    id: "TX-1",
    type: "Wire Transfer",
    date: "2025-01-01",
    amount: "$500",
    beneficiary: "ABC Corp",
    status: "Completed",
    details: "Invoice",
    severity: "HIGH",
  },
  {
    id: "TX-2",
    type: "ACH Transfer",
    date: "2025-01-02",
    amount: "$200",
    beneficiary: "XYZ Inc",
    status: "Pending",
    details: "Subscription",
    severity: "LOW",
  },
];

describe("RelatedTransactions Component", () => {
  it("renders the component heading", () => {
    render(<RelatedTransactions transactions={mockTxns} />);
    expect(screen.getByText("Related Transactions")).toBeInTheDocument();
  });

  it("renders transaction rows", () => {
    render(<RelatedTransactions transactions={mockTxns} />);
    expect(screen.getByText("ABC Corp")).toBeInTheDocument();
    expect(screen.getByText("XYZ Inc")).toBeInTheDocument();
  });

  it("filters by search query", () => {
    render(<RelatedTransactions transactions={mockTxns} />);
    const input = screen.getByPlaceholderText(
      /Search transactions, amounts, beneficiaries, or references.../i
    );

    fireEvent.change(input, { target: { value: "ABC" } });

    expect(screen.getByText("ABC Corp")).toBeInTheDocument();
    expect(screen.queryByText("XYZ Inc")).not.toBeInTheDocument();
  });

  it("filters by type dropdown", () => {
    render(<RelatedTransactions transactions={mockTxns} />);
    fireEvent.change(screen.getByDisplayValue("All Transaction Types"), {
      target: { value: "Wire Transfer" },
    });

    expect(screen.getByText("ABC Corp")).toBeInTheDocument();
    expect(screen.queryByText("XYZ Inc")).not.toBeInTheDocument();
  });

  it("shows no transactions when list is empty", () => {
    render(<RelatedTransactions transactions={[]} />);
    expect(screen.queryByText("ABC Corp")).not.toBeInTheDocument();
    expect(screen.queryByText("XYZ Inc")).not.toBeInTheDocument();
  });
});
