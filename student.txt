import { useState } from 'react';
import { Shield, UserCircle, Lock, Eye, EyeOff, LogIn } from 'lucide-react';

export default function LoginPage() {
  // State to show/hide password
  const [showPassword, setShowPassword] = useState(false);
  
  // State for form inputs
  const [userid, setUserid] = useState('');
  const [password, setPassword] = useState('');
  
  // State for button loading
  const [isLoading, setIsLoading] = useState(false);

  // Function when user clicks login button
  function handleLogin() {
    setIsLoading(true);
    
    // Simulate login process (replace this with your actual login API call)
    setTimeout(() => {
      setIsLoading(false);
      alert('Login successful!');
      console.log('User ID:', userid);
      console.log('Password:', password);
    }, 2000);
  }

  // Function to toggle password visibility
  function togglePassword() {
    setShowPassword(!showPassword);
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-800 via-slate-700 to-slate-800 flex items-center justify-center p-4">
      
      {/* Login Box */}
      <div className="w-full max-w-md bg-slate-800 rounded-3xl shadow-2xl border border-emerald-400/20 p-12">
        
        {/* Logo and Title */}
        <div className="text-center mb-10">
          <Shield className="w-14 h-14 text-emerald-400 mx-auto mb-4" />
          <h1 className="text-4xl font-bold text-emerald-400 mb-2 tracking-wider uppercase">
            FinCrime
          </h1>
          <p className="text-slate-400 text-sm tracking-widest">
            Secure Access Portal
          </p>
        </div>

        {/* User ID Input */}
        <div className="mb-6">
          <div className="relative">
            <UserCircle className="absolute left-5 top-1/2 -translate-y-1/2 w-5 h-5 text-emerald-400" />
            <input
              type="text"
              placeholder="User ID"
              value={userid}
              onChange={(e) => setUserid(e.target.value)}
              className="w-full px-14 py-4 bg-slate-700/60 border-2 border-emerald-400/30 rounded-xl text-slate-100 placeholder-slate-500 focus:outline-none focus:border-emerald-400"
            />
          </div>
        </div>

        {/* Password Input */}
        <div className="mb-6">
          <div className="relative">
            <Lock className="absolute left-5 top-1/2 -translate-y-1/2 w-5 h-5 text-emerald-400" />
            <input
              type={showPassword ? 'text' : 'password'}
              placeholder="Password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="w-full px-14 py-4 bg-slate-700/60 border-2 border-emerald-400/30 rounded-xl text-slate-100 placeholder-slate-500 focus:outline-none focus:border-emerald-400"
            />
            <button
              onClick={togglePassword}
              className="absolute right-5 top-1/2 -translate-y-1/2 text-emerald-400"
            >
              {showPassword ? <EyeOff className="w-5 h-5" /> : <Eye className="w-5 h-5" />}
            </button>
          </div>
        </div>

        {/* Login Button */}
        <button
          onClick={handleLogin}
          disabled={isLoading}
          className="w-full py-4 bg-gradient-to-r from-emerald-400 to-emerald-500 hover:from-emerald-500 hover:to-emerald-600 text-slate-900 font-bold text-base uppercase tracking-widest rounded-xl shadow-lg hover:shadow-xl transition-all duration-300"
        >
          {isLoading ? (
            'Authenticating...'
          ) : (
            <span className="flex items-center justify-center gap-2">
              <LogIn className="w-5 h-5" />
              Login
            </span>
          )}
        </button>

        {/* Footer Text */}
        <div className="mt-8 text-center">
          <p className="text-slate-500 text-sm">
            Protected by advanced security protocols
          </p>
        </div>
      </div>
    </div>
  );
}
