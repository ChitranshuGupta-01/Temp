"use client";
import { useState } from 'react';
import { UserCircle, Lock, Eye, EyeOff, Loader2, Check } from 'lucide-react';

export default function LoginPage() {
  const [showPassword, setShowPassword] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const [isSuccess, setIsSuccess] = useState(false);
  const [userid, setUserid] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');

  const handleLogin = () => {
    setError("");
    setIsLoading(true);

  
    setTimeout(() => {
      if (userid === "admin" && password === "fin@1234") {
        
        const token = "fincrime_token_" + Math.random().toString(36).substring(2);
        // In your actual app, add: setSession(token);
        setIsLoading(false);
        setIsSuccess(true);
        //const expiry = new Date().getTime() + 2 * 60 * 1000; 


        setTimeout(() => {
          // In your actual app, add: router.push("/");
          console.log("Login successful! Redirecting...", token);
        }, 1500);
      } else {
        setIsLoading(false);
        setError("Invalid credentials. Try again.");
      }
    }, 2000);
  };

  const togglePasswordVisibility = () => setShowPassword(!showPassword);

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col">
      {/* Top Navigation Bar */}
      <div className="w-full bg-white shadow-sm py-4 px-6">
        <div className="flex items-center gap-3">
          {/* Add your Standard Chartered logo image here */}
          <img src="YOUR_LOGO_PATH_HERE" alt="Standard Chartered" className="h-10" />
          <span className="text-xl font-medium text-blue-600">Krono Sphere</span>
        </div>
      </div>

      {/* Main Content Area */}
      <div className="flex-1 flex items-center justify-center p-4">
        {/* Login Box */}
        <div className="w-full max-w-md bg-white rounded-lg shadow-lg p-10">
        
        {/* Title */}
        <div className="text-center mb-8">
          <h1 className="text-2xl font-normal text-gray-600 mb-2">
            Sign in to your account
          </h1>
        </div>

        {/* User Name Input */}
        <div className="mb-5">
          <label className="block text-sm text-gray-600 mb-2">
            User Name <span className="text-red-500">*</span>
          </label>
          <div className="relative">
            <UserCircle className="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" />
            <input
              type="text"
              placeholder=""
              value={userid}
              onChange={(e) => setUserid(e.target.value)}
              className="w-full pl-10 pr-4 py-3 bg-white border border-gray-300 rounded text-gray-800 placeholder-gray-400 focus:outline-none focus:border-blue-400 transition-colors"
            />
          </div>
        </div>

        {/* Password Input */}
        <div className="mb-3">
          <label className="block text-sm text-gray-600 mb-2">
            Password <span className="text-red-500">*</span>
          </label>
          <div className="relative">
            <Lock className="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" />
            <input
              type={showPassword ? 'text' : 'password'}
              placeholder=""
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              className="w-full pl-10 pr-12 py-3 bg-white border border-gray-300 rounded text-gray-800 placeholder-gray-400 focus:outline-none focus:border-blue-400 transition-colors"
            />
            
            {/* Eye Icon */}
            <button
              type="button"
              onClick={togglePasswordVisibility}
              className="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors"
            >
              {showPassword ? <EyeOff className="w-5 h-5" /> : <Eye className="w-5 h-5" />}
            </button>
          </div>
        </div>

        {/* Error Message */}
        {error && <p className="text-red-500 text-sm mb-4 text-center">{error}</p>}

        {/* Sign In Button */}
        <button
          onClick={handleLogin}
          disabled={isLoading || isSuccess || !userid || !password}
          className="w-full py-3 bg-blue-500 hover:bg-blue-600 text-white font-medium text-base rounded shadow-md hover:shadow-lg transition-all duration-200 disabled:opacity-60 disabled:cursor-not-allowed"
        >
          <span className="flex items-center justify-center gap-2">
            {isLoading ? (
              <>
                <Loader2 className="w-5 h-5 animate-spin" />
                Authenticating...
              </>
            ) : isSuccess ? (
              <>
                <Check className="w-5 h-5" />
                Access Granted
              </>
            ) : (
              "Sign In"
            )}
          </span>
        </button>
        </div>
      </div>
    </div>
  );
}
